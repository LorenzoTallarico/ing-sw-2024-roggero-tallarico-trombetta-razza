Completare Model:

- Metodi (N.B. da scrivere commenti iniziali e gestire già le varie eccezioni dell'input, pure le casistiche più improbabili)
- Testing
- Gestione eccezioni
- Limitazione mosse player
- Sistemare secret achievement attributo in player (da arraylist a singolo attributo)
- Aggiungere chat nel game (effettivamente), controllare spunti
- (Teo) finire controllo piazzamento carta oro in Player - placeable
- Fare json delle gold card
- Aggiungere final ai class del singleton
- Gestire caso fine partita se le carte da pescare terminano



Controller:
- Inizio
- changeTurn () -- controllo anche se arrivato a 20 punti prima di cambiarlo
- draw()
- place()
- firstRound() -- scelta achievement segreto
- lastRound() -- calcolo punti achievement segreto e achievement comuni e setta vincitori
- mega metodo turno()?

- Sistemare Color (automatizzarne l'assegnamento tramite la classe game, assegnamento casuale tra quelli non già assegnati in modo da evitare anche controlli)


ROBE DA DIRE AL LAB 15/04
- implementato strategy pattern, con strategy instance creator



- fare AchievementCard assegnamento a player e (scelta)
- fare enum StatoGioco

Placing[carta e cordinate] -->server
server fa check vero o falso se è piazzabile o meno
 se vero--> placedCard[coord player]
 se falso --> placedError
 aggiornamento player

 server AskingDraw

 DRAW

